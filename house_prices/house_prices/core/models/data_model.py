from django.db import models
from django.utils import timezone


class HousePriceFactor(models.Model):
    id = models.IntegerField(primary_key=True)
    mssubclass = models.IntegerField(null=True, blank=True)
    mszoning = models.CharField(null=True, blank=True, max_length=50)
    lotfrontage = models.FloatField(null=True, blank=True)
    lotarea = models.IntegerField(null=True, blank=True)
    street = models.CharField(null=True, blank=True, max_length=50)
    alley = models.CharField(null=True, blank=True, max_length=50)
    lotshape = models.CharField(null=True, blank=True, max_length=50)
    landcontour = models.CharField(null=True, blank=True, max_length=50)
    utilities = models.CharField(null=True, blank=True, max_length=50)
    lotconfig = models.CharField(null=True, blank=True, max_length=50)
    landslope = models.CharField(null=True, blank=True, max_length=50)
    neighborhood = models.CharField(null=True, blank=True, max_length=50)
    condition1 = models.CharField(null=True, blank=True, max_length=50)
    condition2 = models.CharField(null=True, blank=True, max_length=50)
    bldgtype = models.CharField(null=True, blank=True, max_length=50)
    housestyle = models.CharField(null=True, blank=True, max_length=50)
    overallqual = models.IntegerField(null=True, blank=True)
    overallcond = models.IntegerField(null=True, blank=True)
    yearbuilt = models.IntegerField(null=True, blank=True)
    yearremodadd = models.IntegerField(null=True, blank=True)
    roofstyle = models.CharField(null=True, blank=True, max_length=50)
    roofmatl = models.CharField(null=True, blank=True, max_length=50)
    exterior1st = models.CharField(null=True, blank=True, max_length=50)
    exterior2nd = models.CharField(null=True, blank=True, max_length=50)
    masvnrtype = models.CharField(null=True, blank=True, max_length=50)
    masvnrarea = models.FloatField(null=True, blank=True)
    exterqual = models.CharField(null=True, blank=True, max_length=50)
    extercond = models.CharField(null=True, blank=True, max_length=50)
    foundation = models.CharField(null=True, blank=True, max_length=50)
    bsmtqual = models.CharField(null=True, blank=True, max_length=50)
    bsmtcond = models.CharField(null=True, blank=True, max_length=50)
    bsmtexposure = models.CharField(null=True, blank=True, max_length=50)
    bsmtfintype1 = models.CharField(null=True, blank=True, max_length=50)
    bsmtfinsf1 = models.IntegerField(null=True, blank=True)
    bsmtfintype2 = models.CharField(null=True, blank=True, max_length=50)
    bsmtfinsf2 = models.IntegerField(null=True, blank=True)
    bsmtunfsf = models.IntegerField(null=True, blank=True)
    totalbsmtsf = models.IntegerField(null=True, blank=True)
    heating = models.CharField(null=True, blank=True, max_length=50)
    heatingqc = models.CharField(null=True, blank=True, max_length=50)
    centralair = models.CharField(null=True, blank=True, max_length=50)
    electrical = models.CharField(null=True, blank=True, max_length=50)
    stflrsf1 = models.IntegerField(null=True, blank=True) # 숫자를 뒤로 보냄
    ndflrsf2 = models.IntegerField(null=True, blank=True)
    lowqualfinsf = models.IntegerField(null=True, blank=True)
    grlivarea = models.IntegerField(null=True, blank=True)
    bsmtfullbath = models.IntegerField(null=True, blank=True)
    bsmthalfbath = models.IntegerField(null=True, blank=True)
    fullbath = models.IntegerField(null=True, blank=True)
    halfbath = models.IntegerField(null=True, blank=True)
    bedroomabvgr = models.IntegerField(null=True, blank=True)
    kitchenabvgr = models.IntegerField(null=True, blank=True)
    kitchenqual = models.CharField(null=True, blank=True, max_length=50)
    totrmsabvgrd = models.IntegerField(null=True, blank=True)
    functional = models.CharField(null=True, blank=True, max_length=50)
    fireplaces = models.IntegerField(null=True, blank=True)
    fireplacequ = models.CharField(null=True, blank=True, max_length=50)
    garagetype = models.CharField(null=True, blank=True, max_length=50)
    garageyrblt = models.FloatField(null=True, blank=True)
    garagefinish = models.CharField(null=True, blank=True, max_length=50)
    garagecars = models.IntegerField(null=True, blank=True)
    garagearea = models.IntegerField(null=True, blank=True)
    garagequal = models.CharField(null=True, blank=True, max_length=50)
    garagecond = models.CharField(null=True, blank=True, max_length=50)
    paveddrive = models.CharField(null=True, blank=True, max_length=50)
    wooddecksf = models.IntegerField(null=True, blank=True)
    openporchsf = models.IntegerField(null=True, blank=True)
    enclosedporch = models.IntegerField(null=True, blank=True)
    ssnporch3 = models.IntegerField(null=True, blank=True)
    screenporch = models.IntegerField(null=True, blank=True)
    poolarea = models.IntegerField(null=True, blank=True)
    poolqc = models.CharField(null=True, blank=True, max_length=50)
    fence = models.CharField(null=True, blank=True, max_length=50)
    miscfeature = models.CharField(null=True, blank=True, max_length=50)
    miscval = models.IntegerField(null=True, blank=True)
    mosold = models.IntegerField(null=True, blank=True)
    yrsold = models.IntegerField(null=True, blank=True)
    saletype = models.CharField(null=True, blank=True, max_length=50)
    salecondition = models.CharField(null=True, blank=True, max_length=50)
    saleprice = models.IntegerField(null=True, blank=True)
    created_at = models.DateTimeField(default=timezone.now())

    class Meta:
        db_table = 'house_price_factor'
